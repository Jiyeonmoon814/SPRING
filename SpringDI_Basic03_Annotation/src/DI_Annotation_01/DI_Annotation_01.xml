<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
		MonitorViewer viewer = new MonitorViewer();
		Recorder recorder = new Recorder();
		viewer.setRecorder(recorder);
		
		1 단계 (xml)
		<bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
		<bean id="viewer" class="DI_Annotation_01.MonitorViewer">
			<property name="">
				<ref bean=""/>
			</property>
		</bean>
		
		2 단계 (Annotation)
		@Autowired > Type기반
		목적 : 의존관계를 자동설정할 때 사용하며 [타입을 이용]하여 의존하는 객체를 삽입해 준다. 
		그러므로 (IOC Container) 해당 타입의 빈객체가 존재하지 않거나 또는 2개 이상 존재할 경우 
		스프링은 예외를 발생시키게 된다.
		
		설정 위치 : 생성자, 필드, 메소드(굳이 setter메소드가 아니여도 된다)
		
		@Autowired 동작되기 위해서 선행 객체가 필요하다
		<bean id=""  class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
		AutowiredAnnotationBeanPostProcessor 빈 객체로 동록
		
		******
		<context:annotation-config />
		Anotation 사용에 필요한 모든 클래스를 한방에 빈객체로 생성
		단점) 사용하지 않는 bean객체도 자동 등록
		@Autowired 사용가능
		
	  >> @Autowired 정상적으로 동작되지 않는 경우
	  1. injection 되는 타입의 bean 객체가 IOC컨테이너 안에 없는 경우 (exception)
	
	  2. IOC 컨테이너 안에 같은 타입의 bean 객체가 여러개 존재하는 경우
	    <bean id="a" class="DI_Annotation_01.Recorder"></bean>
		<bean id="b" class="DI_Annotation_01.Recorder"></bean>
		<bean id="c" class="DI_Annotation_01.Recorder"></bean>
	
	 3. IOC 컨테이너 안에 같은 타입의 bean 객체가 여러개 존재하더라도 
	    private Recorder recorder;
	    public void setRecorder(Recorder recorder)
	    set 함수의 parameter 이름이  <bean id 와 동일하다면 ... 처리 가능
	       원칙) @Resource (by name) 
-->
	<context:annotation-config />
	<bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
	<bean id="viewer" class="DI_Annotation_01.MonitorViewer"></bean>
</beans>
